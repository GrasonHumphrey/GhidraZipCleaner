name: Build and Publish Artifact

on:
  push:
    branches:
      - master # Triggers on pushes to the master branch

jobs:
  build-and-publish-artifact:
    runs-on: windows-2025 # Must use Windows for .NET Framework and MSBuild

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up MSBuild
      - name: Setup MSBuild
        uses: microsoft/setup-msbuild@v2
        with:
          msbuild-architecture: x64

      # Step 3: Build the GUI project in Release mode using MSBuild
      - name: Build GUI with MSBuild
        run: msbuild GhidraZipCleaner.sln -restore /p:Configuration=Release /p:Platform="Any CPU" -p:RestorePackagesConfig=true -p:BuildProjectReferences=true
        
      # Step 4: Restore CLI Build
      - name: Restore CLI Build with MSBuild
        run: msbuild .\GhidraZipCleaner_CLI\GhidraZipCleaner_CLI.csproj -t:restore
        
      # Step 5: Build the CLI project in Release mode with MSBuild  
      - name: Build CLI with MSBuild
        run: msbuild .\GhidraZipCleaner_CLI\GhidraZipCleaner_CLI.csproj -restore -t:publish -p:OutputType=Exe -p:Configuration=Release -p:BuildProjectReferences=true -p:PublishSingleFile=true -p:RuntimeIdentifier=win-x86 -p:TargetFrameworkVersion=8.0 -p:RestorePackagesConfig=true
       
      # Step 6: Upload the ZIP as an artifact
      - name: Upload GUI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: GhidraZipCleaner
          path: ./GhidraZipCleaner/bin/Release
      
      # Step 7: Upload the CLI ZIP as an artifact
      - name: Upload CLI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: GhidraZipCleaner_CLI
          path: ./GhidraZipCleaner_CLI/bin/Release/net8.0/win-x86/publish
      
      # Step 8: Upload the Python3 ZIP as an artifact
      - name: Upload Python3 Artifact
        uses: actions/upload-artifact@v4
        with:
          name: GhidraZipCleaner_Python3
          path: ./GhidraZipCleaner_Python3